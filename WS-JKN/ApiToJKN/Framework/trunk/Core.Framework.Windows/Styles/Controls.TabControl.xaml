<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:conv="clr-namespace:Core.Framework.Windows.Converters"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:Implementations="clr-namespace:Core.Framework.Windows.Implementations" mc:Ignorable="d">
    <ResourceDictionary.MergedDictionaries>
        <!--<ResourceDictionary Source="pack://application:,,,/Core.Framework.Windows;component/Styles/VS/Colours.xaml" />-->
        <ResourceDictionary Source="Accents\BlueWhite.xaml"/>
        <ResourceDictionary>

            <!--  General  -->
            <SolidColorBrush x:Key="BackgroundHighlighted" Color="#ffffff" />
            <SolidColorBrush x:Key="BorderBrushHighlighted" Color="#ffffff" />
            <SolidColorBrush x:Key="BackgroundSelected" Color="{DynamicResource AccentColor5}" />
            <SolidColorBrush x:Key="BorderBrushSelected" Color="{DynamicResource AccentColor5}" />
            <SolidColorBrush x:Key="BackgroundNormal" Color="#ffffff" />
            <SolidColorBrush x:Key="BorderBrushNormal" Color="#ffffff" />

            <!--  Close Button  -->
            <SolidColorBrush x:Key="CloseButtonBackgroundHighlighted" Color="{DynamicResource AccentColor6}" />
            <SolidColorBrush x:Key="CloseButtonBackgroundPressed" Color="{DynamicResource AccentColor6}" />
            <SolidColorBrush x:Key="CloseButtonStroke" Color="#AAFFFFFF" />
            <SolidColorBrush x:Key="CloseButtonStrokeHighlighted" Color="#FFFFFF" />

        </ResourceDictionary>

    </ResourceDictionary.MergedDictionaries>

    <conv:ToUpperConverter x:Key="ToUpperConverter" />
    <Style TargetType="{x:Type TabControl}" x:Key="MetroTabControl">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Border BorderBrush="Black" BorderThickness="1">
                        <Grid Height="250" Width="298.92">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0" />
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                                <RowDefinition x:Name="RowDefinition1" Height="*" />
                            </Grid.RowDefinitions>
                            <TabPanel x:Name="HeaderPanel" Grid.Column="0" IsItemsHost="true" Grid.Row="0"
                                      KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" />
                            <Border Grid.Column="0" Grid.Row="1" BorderBrush="Black" BorderThickness="0,1">
                                <Border x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                        KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                    <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent"
                                                      Margin="{TemplateBinding Padding}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabItem}" x:Key="MetroTabItem">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="6,2,6,2" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="MinWidth" Value="5" />
        <Setter Property="MinHeight" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid Height="Auto" VerticalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="5" />

                        </Grid.ColumnDefinitions>
                        <Rectangle Grid.ColumnSpan="2" Margin="0,0,1.847,0" Stroke="{x:Null}" Fill="{x:Null}" />
                        <Grid Grid.ColumnSpan="2" Margin="0" Height="30" VerticalAlignment="Bottom">
                            <Label x:Name="root" FontSize="18.667" Grid.ColumnSpan="1" VerticalAlignment="Stretch"
                                   HorizontalAlignment="Center" Margin="0,-3.108,0,3.071" d:LayoutOverrides="Height">
                                <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" />
                            </Label>
                            <Rectangle x:Name="rectangle" Stroke="{x:Null}" Grid.Column="0" Width="1" Margin="0"
                                       HorizontalAlignment="Right" VerticalAlignment="Center"
                                       RenderTransformOrigin="0.5,0.5" Height="20">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="{DynamicResource BaseColor2}" />
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="underscore" Stroke="{x:Null}" Grid.Column="0" Width="Auto"
                                       Margin="0,0,0,-0.001" VerticalAlignment="Bottom" Height="4" Grid.ColumnSpan="1"
                                       Visibility="Collapsed">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="{DynamicResource AccentDarkColor}" />
                                </Rectangle.Fill>
                            </Rectangle>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="root" Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource AccentDarkColor}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="underscore" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <Trigger Property="IsSelected" Value="false">
                            <Setter TargetName="root" Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource GrayNormal}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="underscore" Property="Visibility" Value="Collapsed" />

                        </Trigger>
                        <Trigger SourceName="root" Property="IsMouseOver" Value="True">
                            <Setter TargetName="root" Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource AccentColor}" />
                                </Setter.Value>
                            </Setter>

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <AdornerDecorator>
                        <ContentPresenter Content="{Binding}"/>
                    </AdornerDecorator>
                </DataTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>
    <Style x:Key="TabItemVs" TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid Height="30"
                          Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="true" Margin="0,0,0,1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="25" />
                        </Grid.ColumnDefinitions>
                        <!--<Button Grid.Column="1"
                                Width="15"
                                Height="15"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Command="{Binding Path=CloseCommand}"
                                DockPanel.Dock="Right">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Cursor" Value="Hand" />
                                    <Setter Property="Focusable" Value="False" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Grid Background="{TemplateBinding Background}">
                                                    <Path x:Name="ButtonPath"
                                                          Margin="2"
                                                          HorizontalAlignment="Center"
                                                          VerticalAlignment="Center"
                                                          Data="M0,0 L1,1 M0,1 L1,0"
                                                          Stretch="Uniform"
                                                          Stroke="{DynamicResource CloseButtonStroke}"
                                                          StrokeEndLineCap="Flat"
                                                          StrokeStartLineCap="Flat"
                                                          StrokeThickness="2" />
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition
                                                                Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TabItem}}"
                                                                Value="false" />
                                                            <Condition
                                                                Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TabItem}}"
                                                                Value="false" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Hidden" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Visibility" Value="Hidden" />
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background"
                                                                Value="{DynamicResource CloseButtonBackgroundHighlighted}" />
                                                        <Setter TargetName="ButtonPath" Property="Stroke"
                                                                Value="{DynamicResource CloseButtonStrokeHighlighted}" />
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="true">
                                                        <Setter Property="Background"
                                                                Value="{DynamicResource CloseButtonBackgroundPressed}" />
                                                        <Setter TargetName="ButtonPath" Property="Stroke"
                                                                Value="{DynamicResource CloseButtonStroke}" />
                                                        <Setter TargetName="ButtonPath" Property="Margin"
                                                                Value="2.5,2.5,1.5,1.5" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>-->
                        <TextBlock x:Name="textBlock" Margin="0" TextWrapping="Wrap" d:LayoutOverrides="Width, Height"
                                   VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="16"
                                   FontWeight="Normal" FontFamily="Segoe UI Light">
                            <ContentPresenter
                                Margin="10,0,10,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                ContentSource="Header" />
                        </TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Setter Property="Foreground" TargetName="textBlock" Value="White" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="false">
                            <Setter Property="Background" Value="White" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource BorderBrushSelected}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="{DynamicResource BackgroundSelected}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StandardTabControl" TargetType="{x:Type Implementations:CoreTabControl}">
        <Style.Resources>

        </Style.Resources>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border Background="White"
                                BorderBrush="{DynamicResource BackgroundSelected}"
                                BorderThickness="0,0,0,3">
                            <TabPanel Name="HeaderPanel"
                                      Margin="0,0,4,-1"
                                      Panel.ZIndex="1"
                                      IsItemsHost="True"
                                      KeyboardNavigation.TabIndex="1" />
                        </Border>
                        <Border Grid.Row="1" Background="{DynamicResource Foreground}" />
                        <ContentPresenter Name="PART_SelectedContentHost"
                                          Grid.Row="1"
                                          ContentSource="SelectedContent" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="ClosableTabItemTemplate">
        <DockPanel>
            <ContentPresenter VerticalAlignment="Center" Content="{Binding DisplayName}">
                <ContentPresenter.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="Foreground" Value="{StaticResource Foreground}" />
                        <Setter Property="FontSize" Value="20" />
                    </Style>
                </ContentPresenter.Resources>
            </ContentPresenter>
        </DockPanel>
    </DataTemplate>

    <!--  This template explains how to render the 'Workspace' content area in the main window.  -->
    <DataTemplate x:Key="WorkspacesTemplate">
        <TabControl Margin="0"
                    IsSynchronizedWithCurrentItem="True"
                    ItemTemplate="{StaticResource ClosableTabItemTemplate}"
                    ItemsSource="{Binding}"
                    Style="{DynamicResource StandardTabControl}" />
    </DataTemplate>
</ResourceDictionary>