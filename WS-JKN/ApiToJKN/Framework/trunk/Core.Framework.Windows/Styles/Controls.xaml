<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Implementations="clr-namespace:Core.Framework.Windows.Implementations"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:Control="clr-namespace:Core.Framework.Windows.Controls"
                    mc:Ignorable="d">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Implementations/Drag/Themes/Generic.xaml" />
        
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Implementations/PropertyGrid/Themes/Generic.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Styles/Controls.Calendar.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Styles/Controls.ListView.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Styles/Controls.Scrollbars.xaml" />
        
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Themes/FlyoutsControl.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Themes/Flyout.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Styles/Controls.Buttons.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Core.Framework.Windows;component/Styles/ButtonStyle.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Styles/Controls.CheckBox.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Styles/Controls.ComboBox.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Styles/Controls.AutoComplete.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Styles/Controls.ContextMenu.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Styles/Controls.GroupBox.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Styles/Controls.ListBox.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Styles/Controls.PasswordBox.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Styles/Controls.ProgressBar.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Styles/Controls.RadioButton.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Styles/Controls.Slider.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Styles/Controls.TabControl.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Styles/Controls.TextBlock.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Styles/Controls.TextBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Core.Framework.Windows;component/Styles/Controls.Label.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Styles/Controls.ListView.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Styles/Controls.DataGrid.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Styles/Controls.PanelMetro.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Styles/Controls.DisplayWithTextbox.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Styles/Controls.DisplayWithComboBox.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Styles/Control.UserControl.xaml" />

        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Styles/MaterialDesignTheme.Light.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Styles/MaterialDesignTheme.Clock.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Styles/MaterialDesignTheme.Shadows.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Styles/MaterialDesignTheme.TimePicker.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Styles/Accents/MaterialDesign/MaterialDesignColor.Grey.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Styles/MaterialDesignTheme.Calendar.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Styles/MaterialDesignTheme.DatePicker.xaml" />
        
        <ResourceDictionary
            Source="pack://application:,,,/Core.Framework.Windows;component/Implementations/Chart/Themes/Generic.xaml" />
        <!--<ResourceDictionary Source="pack://application:,,,/Core.Framework.Windows;component/Styles/Controls.Tooltip.xaml" />-->

        <!--<ResourceDictionary Source="pack://application:,,,/Core.Framework.Windows;component/Styles/Controls.ToolBar.xaml" />-->
        <!--<ResourceDictionary Source="pack://application:,,,/Core.Framework.Windows;component/Styles/Controls.Form.xaml" />-->
        <ResourceDictionary Source="Controls.DateTime.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <SolidColorBrush x:Key="PrimaryHueLightBrush" Color="{StaticResource Primary100}"/>
    <SolidColorBrush x:Key="PrimaryHueLightForegroundBrush" Color="{StaticResource Primary100Foreground}"/>
    <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="{StaticResource Primary500}"/>
    <SolidColorBrush x:Key="PrimaryHueMidForegroundBrush" Color="{StaticResource Primary500Foreground}"/>
    <SolidColorBrush x:Key="PrimaryHueDarkBrush" Color="{StaticResource Primary700}"/>
    <SolidColorBrush x:Key="PrimaryHueDarkForegroundBrush" Color="{StaticResource Primary700Foreground}"/>
    <ExponentialEase Exponent="2" EasingMode="EaseIn" x:Key="ExpoEaseIn" />
    <ExponentialEase Exponent="2" EasingMode="EaseOut" x:Key="ExpoEaseOut" />
    <ExponentialEase Exponent="2" EasingMode="EaseInOut" x:Key="ExpoEaseInOut" />

    <Storyboard x:Key="HideFloatingMessageStoryboard">
        <DoubleAnimation EasingFunction="{StaticResource ExpoEaseInOut}" Storyboard.TargetName="FloatingMessageContainer" Storyboard.TargetProperty="Height" To="0" Duration="0:0:.2" />
        <DoubleAnimation Storyboard.TargetName="FloatingMessageContainer" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.2" />
        <DoubleAnimation EasingFunction="{StaticResource ExpoEaseIn}" Storyboard.TargetName="FloatingMessage" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" To="20" Duration="0:0:.2" />
    </Storyboard>
    <Storyboard x:Key="ShowFloatingMessageStoryboard">
        <DoubleAnimation EasingFunction="{StaticResource ExpoEaseInOut}" Storyboard.TargetName="FloatingMessageContainer" Storyboard.TargetProperty="Height" To="15" Duration="0:0:.2" />
        <DoubleAnimation Storyboard.TargetName="FloatingMessageContainer" Storyboard.TargetProperty="Opacity" Duration="0:0:.2" />
        <DoubleAnimation EasingFunction="{StaticResource ExpoEaseOut}" Storyboard.TargetName="FloatingMessage" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" To="0" Duration="0:0:.2" />
    </Storyboard>
    <ControlTemplate x:Key="ValidationToolTipTemplate">
        <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform" X="-25" />
            </Grid.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                        <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="X"
                                                               Storyboard.TargetName="xform">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                               Storyboard.TargetName="Root">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                           Storyboard.TargetName="Root">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                           Storyboard.TargetName="Root">
                                <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Background="{DynamicResource ValidationBrush1}" CornerRadius="5" Margin="4,4,-4,-4" />
            <Border Background="{DynamicResource ValidationBrush2}" CornerRadius="4" Margin="3,3,-3,-3" />
            <Border Background="{DynamicResource ValidationBrush3}" CornerRadius="3" Margin="2,2,-2,-2" />
            <Border Background="{DynamicResource ValidationBrush4}" CornerRadius="2" Margin="1,1,-1,-1" />
            <Border Background="{DynamicResource ValidationBrush5}" CornerRadius="2" />
            <Border CornerRadius="2">
                <TextBlock Foreground="{DynamicResource WhiteColorBrush}"
                           MaxWidth="250"
                           Margin="8,4,8,4"
                           TextWrapping="Wrap"
                           Text="{Binding (Validation.Errors)[0].ErrorContent}"
                           UseLayoutRounding="false" />
            </Border>
        </Grid>
    </ControlTemplate>
    <Style x:Key="MetroBorder" TargetType="{x:Type Implementations:CoreBorder}">
        <Setter Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
        <Setter Property="BorderThickness" Value="2,2,2,2" />
    </Style>
    <Style x:Key="MetroPanelBorder" TargetType="{x:Type Implementations:CorePanel}">
        <Setter Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Implementations:CorePanel}">
                    <Border Height="Auto" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Width="Auto" Background="{x:Null}">
                            <ContentPresenter Margin="0" Content="{TemplateBinding Content}" />
                            <TextBlock x:Name="Tb_TextBlock" HorizontalAlignment="Left" TextWrapping="Wrap"
                                       Text="{TemplateBinding Title}" VerticalAlignment="Top"
                                       Background="{TemplateBinding BackgroundTextColor}"
                                       Foreground="{TemplateBinding ForegroundTextColor}" Margin="12,-9,0,0"
                                       d:LayoutOverrides="Width" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                CanHorizontallyScroll="False" CanVerticallyScroll="False"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                Content="{TemplateBinding Content}" Grid.Column="0"
                                                Margin="{TemplateBinding Padding}" Grid.Row="0" />
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1"
                                   Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   ViewportSize="{TemplateBinding ViewportHeight}" />
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow"
                                   Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0"
                                   Orientation="Horizontal" Grid.Row="1"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   ViewportSize="{TemplateBinding ViewportWidth}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MetroToolTip" TargetType="{x:Type ToolTip}">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="Padding" Value="5,2,5,2" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border x:Name="Root"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{DynamicResource WhiteBrush}"
                            Effect="{DynamicResource DropShadowBrush}"
                            Opacity="0">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="OpenStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Open" GeneratedDuration="0:0:0.3" To="Closed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Closed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="Root">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Open">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="Root">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Padding="{TemplateBinding Padding}">
                            <Border.Resources>
                                <Storyboard x:Key="Visible State" />
                                <Storyboard x:Key="Normal State" />
                            </Border.Resources>
                            <Border.Background>
                                <DynamicResource ResourceKey="WhiteBrush" />
                            </Border.Background>
                            <ContentPresenter Cursor="{TemplateBinding Cursor}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}"
                                              Margin="{TemplateBinding Padding}" />
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--<Style TargetType="Implementations:CoreButton" BasedOn="{StaticResource SquareButtonStyle}" />-->
    <!--<Style TargetType="{x:Type Button}" BasedOn="{StaticResource MetroButton}" />-->
    <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource CorePasswordBoxStyle}" />
    <Style TargetType="{x:Type Implementations:CoreListViewAsycn}" BasedOn="{StaticResource coreListViewStyle}" />
    <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource MetroToolTip}" />
    <Style TargetType="{x:Type Implementations:CoreUserControl}" BasedOn="{StaticResource CoreUserControlStyle}" />
    <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MetroToggleButton}" />
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MetroTextBox}" />
    <Style TargetType="{x:Type Implementations:CoreTextBox}" BasedOn="{StaticResource MetroCoreTextBox}" />
    <Style TargetType="{x:Type Slider}" BasedOn="{StaticResource MetroSlider}" />
    <Style TargetType="CheckBox" BasedOn="{StaticResource MetroCheckBox}" />
    <Style TargetType="RadioButton" BasedOn="{StaticResource MetroRadioButton}" />
    <!--<Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MetroTextBlock}" />-->
    <!--<Style TargetType="{x:Type Label}" BasedOn="{StaticResource MetroLabel}" />-->

    <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource TabItemVs}" />
    <Style TargetType="{x:Type Implementations:CoreTabControl}" BasedOn="{StaticResource StandardTabControl}" />
    <!--<Style TargetType="{x:Type Implementations:CoreTabControl}" BasedOn="{StaticResource MetroTabControl}" />-->
    <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource MetroScrollBar}" />
    <Style TargetType="{x:Type Implementations:CoreRadioButton}" BasedOn="{StaticResource MetroRadioButton}" />
    <Style TargetType="{x:Type Implementations:CoreAutoComplete}" BasedOn="{StaticResource MetroAutoComplete}" />
    <Style TargetType="{x:Type Implementations:CoreAutoCompleteListView}" BasedOn="{StaticResource MetroAutoCompleteAsync}" />
    <Style TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource MetroProgressBar}" />
    <!--<Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource GroupMetroStyle}" />-->
    <!--<Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource MetroPasswordBox}" />-->
    <Style TargetType="{x:Type Implementations:CoreCheckBox}" BasedOn="{StaticResource MetroCheckBox}" />
    <Style TargetType="{x:Type Control:FlyoutsControl}" BasedOn="{StaticResource MetroFlyoutControls}" />
    <Style TargetType="{x:Type Control:Flyout}" BasedOn="{StaticResource FlyputMetro}" />
    <Style TargetType="{x:Type Implementations:CoreComboBox}" BasedOn="{StaticResource MetroComboBox}" />
    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MetroComboBoxClasic}" />
    <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource MetroComboBoxItem}" />
    <Style TargetType="{x:Type Separator}" BasedOn="{StaticResource MetroSeparator}" />
    <Style TargetType="{x:Type Implementations:CoreMenuItem}" BasedOn="{StaticResource MetroMenuItem}" />
    <Style TargetType="{x:Type Implementations:CoreMenu}" BasedOn="{StaticResource StandardMenu}" />
    <Style TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource MetroContextMenu}" />
    <Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MetroGroupBox}" />
    <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource MetroListBox}" />
    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MetroListBoxItem}" />
    <Style TargetType="{x:Type Implementations:CoreListView}" BasedOn="{StaticResource MetroListView}" />
    <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource MetroListViewItem}" />
    <Style TargetType="{x:Type Implementations:CoreDataGrid}" BasedOn="{StaticResource MetroDataGrid}" />
    <Style TargetType="{x:Type Implementations:InsertDataGrid}" BasedOn="{StaticResource DataGridClasic}" />
    <Style TargetType="{x:Type Implementations:CoreDatePicker}" BasedOn="{StaticResource MetroDatePicker}" />
    <Style TargetType="{x:Type Calendar}" BasedOn="{StaticResource MetroCalendar}" />
    <Style TargetType="{x:Type Implementations:CoreBorder}" BasedOn="{StaticResource MetroBorder}" />
    <Style TargetType="{x:Type Implementations:CorePanel}" BasedOn="{StaticResource MetroPanelBorder}" />
    <Style x:Key="ToogleDown" TargetType="{x:Type Implementations:CoreToogleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Implementations:CoreToogleButton}">
                    <Grid x:Name="grid" Cursor="Hand" Background="#00000000" RenderTransformOrigin="0.5,0.5">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform />
                                <SkewTransform />
                                <RotateTransform />
                                <TranslateTransform />
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="TextBoxBorder" Color="Black" />
    <Style x:Key="{x:Type TextBoxBase}" BasedOn="{x:Null}" TargetType="{x:Type TextBoxBase}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Microsoft_Windows_Themes:ListBoxChrome x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                            Background="{TemplateBinding Background}"
                                                            RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                            RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"
                                                            SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Microsoft_Windows_Themes:ListBoxChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type Hyperlink}" TargetType="{x:Type Hyperlink}">
        <Setter Property="Foreground" Value="Blue" />
        <Setter Property="TextDecorations" Value="Underline" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="Red" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="true">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RichTextBoxStyle" TargetType="{x:Type RichTextBox}">
        <Style.Resources>
            <Style x:Key="{x:Type FlowDocument}" TargetType="{x:Type FlowDocument}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
            </Style>
            <Style x:Key="{x:Type Hyperlink}" BasedOn="{StaticResource {x:Type Hyperlink}}"
                   TargetType="{x:Type Hyperlink}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Foreground" Value="Blue" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground"
                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
        <Setter Property="MinWidth" Value="10" />
        <Style.BasedOn>
            <StaticResource ResourceKey="{x:Type TextBoxBase}" />
        </Style.BasedOn>
    </Style>

    <Style x:Key="FlatSlider"
           TargetType="{x:Type Slider}">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Maximum"
                Value="100" />
        <Setter Property="Minimum"
                Value="0" />
        <Setter Property="Value"
                Value="0" />
        <Setter Property="Orientation"
                Value="Horizontal" />
        <Setter Property="Foreground"
                Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="Background"
                Value="{DynamicResource SliderTrackNormal}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource BlackBrush}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Foreground"
                        Value="{DynamicResource SliderValueDisabled}" />
                <Setter Property="Background"
                        Value="{DynamicResource SliderTrackDisabled}" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource SliderThumbDisabled}" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Foreground"
                        Value="{DynamicResource AccentColorBrush2}" />
                <Setter Property="Background"
                        Value="{DynamicResource SliderTrackHover}" />
            </Trigger>
            <Trigger Property="Orientation"
                     Value="Horizontal">
                <Setter Property="Width"
                        Value="100" />
                <Setter Property="MinHeight"
                        Value="12" />
                <Setter Property="Height"
                        Value="12" />
                <Setter Property="Template"
                        Value="{StaticResource HorizontalSlider}" />
            </Trigger>
            <Trigger Property="Orientation"
                     Value="Vertical">
                <Setter Property="MinWidth"
                        Value="12" />
                <Setter Property="Width"
                        Value="12" />
                <Setter Property="Height"
                        Value="100" />
                <Setter Property="Template"
                        Value="{StaticResource VerticalSlider}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="HorizontalSlider"
                     TargetType="{x:Type Slider}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto"
                               MinHeight="{TemplateBinding Slider.MinHeight}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TickBar x:Name="TopTick"
                     Style="{StaticResource SliderTickBarStyle}"
                     Placement="Top" />
            <Track Grid.Row="1"
                   x:Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}"
                                  Command="Slider.DecreaseLarge"
                                  Background="{TemplateBinding Slider.Foreground}"
                                  Height="{TemplateBinding Slider.Height}" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Height="{TemplateBinding Slider.Height}"
                           Width="{TemplateBinding Slider.Height}"
                           Style="{StaticResource SliderThumbStyle}"
                           Background="{TemplateBinding Slider.BorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}"
                                  Command="Slider.IncreaseLarge"
                                  Background="{TemplateBinding Slider.Background}"
                                  Height="{TemplateBinding Slider.Height}" />
                </Track.IncreaseRepeatButton>
            </Track>
            <TickBar x:Name="BottomTick"
                     Style="{StaticResource SliderTickBarStyle}"
                     Placement="Bottom" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement"
                     Value="TopLeft">
                <Setter TargetName="TopTick"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement"
                     Value="BottomRight">
                <Setter TargetName="BottomTick"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement"
                     Value="Both">
                <Setter TargetName="TopTick"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="BottomTick"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="VerticalSlider"
                     TargetType="{x:Type Slider}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto"
                                  MinWidth="{TemplateBinding Slider.MinWidth}" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TickBar x:Name="TopTick"
                     Style="{StaticResource SliderTickBarStyle}"
                     Placement="Left" />
            <Track Grid.Column="1"
                   x:Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}"
                                  Command="Slider.DecreaseLarge"
                                  Background="{TemplateBinding Slider.Foreground}" 
                                  Height="{TemplateBinding Slider.Height}"/>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Height="{TemplateBinding Slider.Width}"
                           Width="{TemplateBinding Slider.Width}"
                           Style="{StaticResource SliderThumbStyle}"
                           Background="{TemplateBinding Slider.BorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}"
                                  Command="Slider.IncreaseLarge"
                                  Background="{TemplateBinding Slider.Background}"
                                  Height="{TemplateBinding Slider.Height}" />
                </Track.IncreaseRepeatButton>
            </Track>
            <TickBar x:Name="BottomTick"
                     Style="{StaticResource SliderTickBarStyle}"
                     Placement="Right" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement"
                     Value="TopLeft">
                <Setter TargetName="TopTick"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement"
                     Value="BottomRight">
                <Setter TargetName="BottomTick"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement"
                     Value="Both">
                <Setter TargetName="TopTick"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="BottomTick"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="SliderButtonStyle"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumbStyle"
           TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderTickBarStyle"
           TargetType="TickBar">
        <Setter Property="Fill"
                Value="{DynamicResource SliderThumbDisabled}" />
        <Setter Property="Visibility"
                Value="Collapsed" />
        <Style.Triggers>
            <Trigger Property="Placement"
                     Value="Top">
                <Setter Property="Height"
                        Value="6" />
                <Setter Property="Margin"
                        Value="0,0,0,3" />
            </Trigger>
            <Trigger Property="Placement"
                     Value="Bottom">
                <Setter Property="Height"
                        Value="6" />
                <Setter Property="Margin"
                        Value="0,3,0,0" />
                <Setter Property="Grid.Row"
                        Value="2" />
            </Trigger>

            <Trigger Property="Placement"
                     Value="Left">
                <Setter Property="Width"
                        Value="6" />
                <Setter Property="Margin"
                        Value="0,0,3,0" />
            </Trigger>
            <Trigger Property="Placement"
                     Value="Right">
                <Setter Property="Width"
                        Value="6" />
                <Setter Property="Margin"
                        Value="3,0,0,0" />
                <Setter Property="Grid.Column"
                        Value="2" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Implementations:Clock}" BasedOn="{StaticResource MaterialDesignClock}" />
</ResourceDictionary>